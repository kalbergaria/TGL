// NOTE: See header file for more information regarding the namespace and/or methods.

////////////////////////////////////////////////////////////////////////////////////////////////////
// EXTERNAL INCLUDES:
////////////////////////////////////////////////////////////////////////////////////////////////////
#include <stdio.h>
#include <sys/ioctl.h>
#include <termios.h>

////////////////////////////////////////////////////////////////////////////////////////////////////
// LOCAL INCLUDES:
////////////////////////////////////////////////////////////////////////////////////////////////////
#include "TLib.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
// NAMESPACE: TLib
////////////////////////////////////////////////////////////////////////////////////////////////////
namespace TLib
{

////////////////////////////////////////////////////////////////////////////////////////////////////
// METHOD: getTerminalWidth
////////////////////////////////////////////////////////////////////////////////////////////////////
unsigned short getTerminalWidth()
{
	struct winsize size;
	ioctl( 0, TIOCGWINSZ, (char *) &size );
	return size.ws_col;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// METHOD: getTerminalHeight
////////////////////////////////////////////////////////////////////////////////////////////////////
unsigned short getTerminalHeight()
{
	struct winsize size;
	ioctl( 0, TIOCGWINSZ, (char *) &size );
	return size.ws_row;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// METHOD: validateTerminalSize
////////////////////////////////////////////////////////////////////////////////////////////////////
bool validateTerminalSize(unsigned short height, unsigned short width)
{
    return true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// METHOD: setTerminalTextColor
////////////////////////////////////////////////////////////////////////////////////////////////////
void setTerminalTextColor(TextColor color)
{
	switch (color)
	{
		case RED:
			printf(ANSI_COLOR_RED);
			break;
		case GREEN:
			printf(ANSI_COLOR_GREEN);
			break;
		case YELLOW:
			printf(ANSI_COLOR_YELLOW); 
			break;
		case BLUE:
			printf(ANSI_COLOR_BLUE);
			break;
		case MAGENTA:
			printf(ANSI_COLOR_MAGENTA);
			break;
		case CYAN:
			printf(ANSI_COLOR_CYAN);
			break;
		case RESET:
			printf(ANSI_COLOR_RESET);
			break;
		default:
			break;
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// METHOD: clearTerminal
////////////////////////////////////////////////////////////////////////////////////////////////////
void clearTerminal()
{
	printf(TERM_CLEAR);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// METHOD: moveCursorTo
////////////////////////////////////////////////////////////////////////////////////////////////////
void moveCursorTo(unsigned short col, unsigned short line)
{
    printf("\033[%d;%dH", col, line);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// METHOD: drawBox
////////////////////////////////////////////////////////////////////////////////////////////////////
void drawBox(unsigned short col, unsigned short line, unsigned short width, unsigned short height, TextColor color, char symbol)
{
	// Set the color
	setTerminalTextColor(color);

	// Print top
	moveCursorTo(col, line);
	for(unsigned short i = 0; i < width; i++)
	{
		putchar(symbol);
	}

	// Print right side
	for(unsigned short i = 1; i < height; i++)
	{
		moveCursorTo(width, i);
		putchar(symbol);
	}

	// Print bottom
	moveCursorTo(0, height);
	for(unsigned short i = 0; i < width; i++)
	{
		putchar(symbol);
	}

	// Print left side

}

////////////////////////////////////////////////////////////////////////////////////////////////////
// METHOD: printBorder
////////////////////////////////////////////////////////////////////////////////////////////////////
void printBorderWithAllColors(unsigned short height, unsigned short width, char symbol)
{
	drawBox(1, 1, width, height, RED, symbol);
}

}